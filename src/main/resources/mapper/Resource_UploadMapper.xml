<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kzl.rm.dao.Resource_UploadMapper">
  <resultMap id="BaseResultMap" type="com.kzl.rm.bean.Resource_Upload">
    <id column="resource_id" jdbcType="BIGINT" property="resourceId" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="resource_url" jdbcType="VARCHAR" property="resourceUrl" />
    <result column="uploader_account" jdbcType="VARCHAR" property="uploaderAccount" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="resource_type" jdbcType="VARCHAR" property="resourceType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kzl.rm.bean.Resource_Upload">
    <result column="resource_describe" jdbcType="LONGVARCHAR" property="resourceDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resource_id, resource_name, resource_url, uploader_account, upload_time, resource_type
  </sql>
  <sql id="Blob_Column_List">
    resource_describe
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kzl.rm.bean.Resource_UploadExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resource_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kzl.rm.bean.Resource_UploadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resource_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resource_upload
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from resource_upload
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kzl.rm.bean.Resource_UploadExample">
    delete from resource_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kzl.rm.bean.Resource_Upload">
    insert into resource_upload (resource_id, resource_name, resource_url, 
      uploader_account, upload_time, resource_type, 
      resource_describe)
    values (#{resourceId,jdbcType=BIGINT}, #{resourceName,jdbcType=VARCHAR}, #{resourceUrl,jdbcType=VARCHAR}, 
      #{uploaderAccount,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, #{resourceType,jdbcType=VARCHAR}, 
      #{resourceDescribe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kzl.rm.bean.Resource_Upload">
    insert into resource_upload
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="resourceUrl != null">
        resource_url,
      </if>
      <if test="uploaderAccount != null">
        uploader_account,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="resourceDescribe != null">
        resource_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null">
        #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploaderAccount != null">
        #{uploaderAccount,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceDescribe != null">
        #{resourceDescribe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kzl.rm.bean.Resource_UploadExample" resultType="java.lang.Long">
    select count(*) from resource_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resource_upload
    <set>
      <if test="record.resourceId != null">
        resource_id = #{record.resourceId,jdbcType=BIGINT},
      </if>
      <if test="record.resourceName != null">
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceUrl != null">
        resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.uploaderAccount != null">
        uploader_account = #{record.uploaderAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resourceType != null">
        resource_type = #{record.resourceType,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceDescribe != null">
        resource_describe = #{record.resourceDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update resource_upload
    set resource_id = #{record.resourceId,jdbcType=BIGINT},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      uploader_account = #{record.uploaderAccount,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      resource_type = #{record.resourceType,jdbcType=VARCHAR},
      resource_describe = #{record.resourceDescribe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resource_upload
    set resource_id = #{record.resourceId,jdbcType=BIGINT},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      uploader_account = #{record.uploaderAccount,jdbcType=VARCHAR},
      upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
      resource_type = #{record.resourceType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kzl.rm.bean.Resource_Upload">
    update resource_upload
    <set>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceUrl != null">
        resource_url = #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="uploaderAccount != null">
        uploader_account = #{uploaderAccount,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=VARCHAR},
      </if>
      <if test="resourceDescribe != null">
        resource_describe = #{resourceDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kzl.rm.bean.Resource_Upload">
    update resource_upload
    set resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_url = #{resourceUrl,jdbcType=VARCHAR},
      uploader_account = #{uploaderAccount,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      resource_type = #{resourceType,jdbcType=VARCHAR},
      resource_describe = #{resourceDescribe,jdbcType=LONGVARCHAR}
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kzl.rm.bean.Resource_Upload">
    update resource_upload
    set resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_url = #{resourceUrl,jdbcType=VARCHAR},
      uploader_account = #{uploaderAccount,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      resource_type = #{resourceType,jdbcType=VARCHAR}
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <select id="getAllByAccount" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resource_upload
    where uploader_account = #{uploaderAccount,jdbcType=VARCHAR}
    order by upload_time Desc
  </select>
  <select id="getALL"  resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resource_upload
    order by upload_time Desc
  </select>
</mapper>